---
export interface Props {
  number: string;
  title: string;
  description: string;
  highlighted?: boolean;
}

const { number, title, description, highlighted = false } = Astro.props;
---

<div class="service-card relative w-full max-w-sm mx-auto bg-white rounded-3xl p-8 shadow-lg border border-gray-100 transition-all duration-300 hover:shadow-xl hover:scale-[1.02] min-h-[400px] flex flex-col group opacity-95 hover:!opacity-100">
  <!-- Number Badge -->
  <div class="absolute top-6 left-6">
    <div class="bg-gray-900 text-white text-sm font-bold px-4 py-2 rounded-xl">
      {number}
    </div>
  </div>
  
  <!-- Specific Icons with animations -->
  {number === '001' && (
    <div class="absolute bottom-6 right-6">
      <div class="w-16 h-16 flex items-center justify-center">
        <!-- Workshop: People in circle with knowledge sharing animation -->
        <svg class="w-16 h-16 text-gray-400 group-hover:text-gray-600 transition-all duration-500" viewBox="0 0 100 100" fill="none">
          <!-- People in circle -->
          <circle cx="50" cy="35" r="8" stroke="currentColor" stroke-width="2" class="person-1"/>
          <circle cx="35" cy="50" r="8" stroke="currentColor" stroke-width="2" class="person-2"/>
          <circle cx="65" cy="50" r="8" stroke="currentColor" stroke-width="2" class="person-3"/>
          <circle cx="50" cy="65" r="8" stroke="currentColor" stroke-width="2" class="person-4"/>
          <!-- Knowledge sharing lines -->
          <path d="M50 35 L35 50 M50 35 L65 50 M35 50 L50 65 M65 50 L50 65" stroke="currentColor" stroke-width="1.5" class="knowledge-lines" opacity="0"/>
          <!-- Central knowledge dot -->
          <circle cx="50" cy="50" r="3" fill="currentColor" class="knowledge-center" opacity="0"/>
        </svg>
      </div>
    </div>
  )}
  
  {number === '002' && (
    <div class="absolute bottom-6 right-6">
      <div class="w-16 h-16 flex items-center justify-center">
        <!-- Custom Program: Modular components -->
        <svg class="w-16 h-16 text-gray-400 group-hover:text-gray-600 transition-all duration-500" viewBox="0 0 100 100" fill="none">
          <!-- Base module -->
          <rect x="30" y="40" width="40" height="20" rx="4" stroke="currentColor" stroke-width="2" class="base-module"/>
          <!-- Custom module 1 -->
          <rect x="25" y="25" width="20" height="12" rx="2" stroke="currentColor" stroke-width="2" class="custom-module-1" opacity="0"/>
          <!-- Custom module 2 -->
          <rect x="55" y="25" width="20" height="12" rx="2" stroke="currentColor" stroke-width="2" class="custom-module-2" opacity="0"/>
          <!-- Custom module 3 -->
          <rect x="40" y="65" width="20" height="12" rx="2" stroke="currentColor" stroke-width="2" class="custom-module-3" opacity="0"/>
          <!-- Connection lines -->
          <path d="M35 37 L35 40" stroke="currentColor" stroke-width="1.5" class="connect-1" opacity="0"/>
          <path d="M65 37 L65 40" stroke="currentColor" stroke-width="1.5" class="connect-2" opacity="0"/>
          <path d="M50 60 L50 65" stroke="currentColor" stroke-width="1.5" class="connect-3" opacity="0"/>
        </svg>
      </div>
    </div>
  )}
  
  {number === '003' && (
    <div class="absolute bottom-6 right-6">
      <div class="w-16 h-16 flex items-center justify-center">
        <!-- Strategy: Arrow path with milestones -->
        <svg class="w-16 h-16 text-gray-400 group-hover:text-gray-600 transition-all duration-500" viewBox="0 0 100 100" fill="none">
          <!-- Strategy path -->
          <path d="M20 70 Q35 50 50 60 Q65 70 80 30" stroke="currentColor" stroke-width="2.5" class="strategy-path"/>
          <!-- Milestones -->
          <circle cx="20" cy="70" r="4" fill="currentColor" class="milestone-1"/>
          <circle cx="50" cy="60" r="4" fill="currentColor" class="milestone-2" opacity="0"/>
          <circle cx="80" cy="30" r="4" fill="currentColor" class="milestone-3" opacity="0"/>
          <!-- Arrow head -->
          <path d="M75 25 L80 30 L75 35 M80 30 L85 25 M80 30 L85 35" stroke="currentColor" stroke-width="2" class="arrow-head" opacity="0"/>
        </svg>
      </div>
    </div>
  )}
  
  {number === '004' && (
    <div class="absolute bottom-6 right-6">
      <div class="w-16 h-16 flex items-center justify-center">
        <!-- Product: Building blocks stacking -->
        <svg class="w-16 h-16 text-gray-400 group-hover:text-gray-600 transition-all duration-500" viewBox="0 0 100 100" fill="none">
          <!-- Base block -->
          <rect x="30" y="60" width="40" height="15" stroke="currentColor" stroke-width="2" class="block-1"/>
          <!-- Middle block -->
          <rect x="35" y="45" width="30" height="15" stroke="currentColor" stroke-width="2" class="block-2" opacity="0"/>
          <!-- Top block -->
          <rect x="40" y="30" width="20" height="15" stroke="currentColor" stroke-width="2" class="block-3" opacity="0"/>
          <!-- Building animation lines -->
          <path d="M50 25 L50 20 M47 22 L50 20 L53 22" stroke="currentColor" stroke-width="1.5" class="build-arrow" opacity="0"/>
        </svg>
      </div>
    </div>
  )}
  
  <!-- Content -->
  <div class="mt-16 mb-16 flex-1 flex flex-col">
    <h3 class="text-2xl font-bold text-gray-900 mb-4 leading-tight">
      {title}
    </h3>
    
    <p class="text-gray-600 leading-relaxed text-base flex-1">
      {description}
    </p>
  </div>
</div>


<style>
  /* Workshop animation - knowledge sharing */
  .group:hover .knowledge-lines {
    opacity: 1;
    animation: pulse 2s ease-in-out infinite;
  }
  .group:hover .knowledge-center {
    opacity: 1;
    animation: glow 2s ease-in-out infinite;
  }

  /* Custom Program animation - modular assembly */
  .group:hover .custom-module-1 {
    opacity: 1;
    animation: slideDown 0.6s ease 0.2s both;
  }
  .group:hover .custom-module-2 {
    opacity: 1;
    animation: slideDown 0.6s ease 0.4s both;
  }
  .group:hover .custom-module-3 {
    opacity: 1;
    animation: slideUp 0.6s ease 0.6s both;
  }
  .group:hover .connect-1 {
    opacity: 1;
    animation: appear 0.4s ease 0.8s both;
  }
  .group:hover .connect-2 {
    opacity: 1;
    animation: appear 0.4s ease 1s both;
  }
  .group:hover .connect-3 {
    opacity: 1;
    animation: appear 0.4s ease 1.2s both;
  }

  /* Strategy animation - path progression */
  .group:hover .milestone-2 {
    opacity: 1;
    animation: appear 0.8s ease 0.3s both;
  }
  .group:hover .milestone-3 {
    opacity: 1;
    animation: appear 0.8s ease 0.6s both;
  }
  .group:hover .arrow-head {
    opacity: 1;
    animation: appear 0.8s ease 0.9s both;
  }

  /* Product animation - building blocks */
  .group:hover .block-2 {
    opacity: 1;
    animation: stack 0.6s ease 0.2s both;
  }
  .group:hover .block-3 {
    opacity: 1;
    animation: stack 0.6s ease 0.4s both;
  }
  .group:hover .build-arrow {
    opacity: 1;
    animation: appear 0.6s ease 0.6s both;
  }

  @keyframes pulse {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }

  @keyframes glow {
    0%, 100% { opacity: 0.8; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }

  @keyframes connect {
    0%, 100% { transform: scale(1); opacity: 0.8; }
    50% { transform: scale(1.5); opacity: 1; }
  }

  @keyframes appear {
    from { opacity: 0; transform: scale(0.8); }
    to { opacity: 1; transform: scale(1); }
  }

  @keyframes stack {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes slideDown {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes slideUp {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>